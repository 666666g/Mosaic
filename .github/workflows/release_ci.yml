name: Pilipala 发布

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'  # 触发带有以 'v' 开头的标签的推送

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: 代码检出
        uses: actions/checkout@v3

      - name: 设置 Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 缓存 Flutter
        uses: actions/cache@v3
        id: cache-flutter
        with:
          path: ~/.cache/flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: 安装 Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19.6
          channel: stable

      - name: 获取依赖
        run: flutter pub get

      - name: 解码密钥库
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/vvex.jks
          chmod 600 android/app/vvex.jks # 重要：限制权限

      - name: 构建 Android APK
        run: |
          flutter build apk --release --split-per-abi
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: 上传 Android 产物
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/*.apk


  build-ios:
    runs-on: macos-latest
    steps:
      - name: 代码检出
        uses: actions/checkout@v3

      - name: 缓存 Flutter
        uses: actions/cache@v3
        id: cache-flutter
        with:
          path: ~/.cache/flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: 安装 Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19.6
          channel: stable

      - name: 构建 iOS IPA
        run: |
          flutter build ios --release --no-codesign
          mv ./build/ios/iphoneos/Runner.ipa ./build/ios/Pilipala-iOS.ipa
        
      - name: 上传 iOS 产物
        uses: actions/upload-artifact@v4
        with:
          name: ios-release
          path: build/ios/Pilipala-iOS.ipa


  release:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    steps:
      - name: 下载产物
        uses: actions/download-artifact@v3
        with:
          path: artifacts
          artifact-names: android-release, ios-release

      - name: 从标签获取版本号
        id: get-version
        run: echo "version=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')" >> $GITHUB_OUTPUT

      - name: 创建发布
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = context.payload.inputs.version
            const releaseResponse = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${version}`,
              name: `v${version}`,
              body: 'Pilipala 应用发布'
            });
            console.log(releaseResponse.data.upload_url)
            context.setOutput('upload_url', releaseResponse.data.upload_url)

      - name: 上传 Android 发布资源
        uses: actions/upload-artifact@v4
        with:
            name: release
            path: artifacts/android-release/*.apk
      - name: 上传 iOS 发布资源
        uses: actions/upload-artifact@v4
        with:
              name: release
              path: artifacts/ios-release/Pilipala-iOS.ipa


